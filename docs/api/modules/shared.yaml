openapi: 3.1.0
info:
  title: SynergyFlow API - Shared Components
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.synergyflow.example.com/oauth/authorize
          tokenUrl: https://auth.synergyflow.example.com/oauth/token
          scopes:
            itsm.read: Read access
            itsm.write: Write access
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  parameters:
    IdPath:
      in: path
      name: id
      required: true
      schema: { type: string }
    Page:
      in: query
      name: page
      schema: { type: integer, minimum: 1, default: 1 }
    Limit:
      in: query
      name: limit
      schema: { type: integer, minimum: 1, maximum: 200, default: 20 }
    Sort:
      in: query
      name: sort
      schema: { type: string, example: '-createdAt' }
    IfMatch:
      in: header
      name: If-Match
      description: ETag for optimistic concurrency control
      schema: { type: string }
    IdempotencyKey:
      in: header
      name: Idempotency-Key
      description: Idempotency key for safely retryable requests
      schema: { type: string, minLength: 8, maxLength: 128 }
  headers:
    ETag:
      description: Entity tag for concurrency control
      schema: { type: string }
    CorrelationId:
      description: Correlation ID for tracing
      schema: { type: string }
  responses:
    ErrorResponse:
      description: Error
      content:
        application/json:
          schema: { $ref: '#/components/schemas/Error' }
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema: { $ref: '#/components/schemas/Error' }
  schemas:
    Error:
      type: object
      required: [code, message]
      properties:
        code: { type: string }
        message: { type: string }
        details: { type: object, additionalProperties: true, nullable: true }
        correlationId: { type: string, nullable: true }
    Severity:
      type: string
      enum: [LOW, MEDIUM, HIGH, CRITICAL]
    IncidentStatus:
      type: string
      enum: [OPEN, IN_PROGRESS, RESOLVED, CLOSED]
    ProblemStatus:
      type: string
      enum: [OPEN, ANALYSIS, KNOWN_ERROR, RESOLVED, CLOSED]
    ChangeType:
      type: string
      enum: [STANDARD, NORMAL, EMERGENCY]
    ChangeStatus:
      type: string
      enum: [DRAFT, PENDING_APPROVAL, APPROVED, SCHEDULED, IMPLEMENTING, COMPLETED, REJECTED, ROLLBACK]
    ServiceRequestStatus:
      type: string
      enum: [OPEN, IN_PROGRESS, APPROVAL_PENDING, FULFILLED, CLOSED]
    ArticleStatus:
      type: string
      enum: [DRAFT, PUBLISHED, ARCHIVED]

