openapi: 3.1.0
info:
  title: SynergyFlow API - Events & Webhooks
  version: 1.0.0
paths:
  /events:
    get:
      tags: [Events]
      summary: List domain events (audit)
      operationId: listEvents
      parameters:
        - in: query
          name: type
          schema: { type: string }
        - in: query
          name: since
          schema: { type: string, format: date-time }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/DomainEvent' }
        default: { $ref: '../modules/shared.yaml#/components/responses/ErrorResponse' }

webhooks:
  incident.created:
    post:
      summary: Incident created event
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/IncidentCreatedEvent' }
  incident.resolved:
    post:
      summary: Incident resolved event
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/IncidentResolvedEvent' }
  change.approved:
    post:
      summary: Change approved event
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ChangeApprovedEvent' }
  change.impactAssessed:
    post:
      summary: CMDB impact assessed for change
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ChangeImpactAssessedEvent' }

components:
  schemas:
    DomainEvent:
      type: object
      properties:
        id: { type: string }
        type: { type: string }
        source: { type: string }
        payload: { type: object, additionalProperties: true }
        publicationDate: { type: string, format: date-time }
        completionDate: { type: string, format: date-time, nullable: true }

    IncidentCreatedEvent:
      type: object
      required: [incidentId, teamId, severity, affectedServiceId, createdAt, version]
      properties:
        incidentId: { type: string }
        teamId: { type: string }
        severity: { $ref: '../modules/shared.yaml#/components/schemas/Severity' }
        affectedServiceId: { type: string }
        createdAt: { type: string, format: date-time }
        version: { type: string }

    IncidentResolvedEvent:
      type: object
      required: [incidentId, resolvedAt, version]
      properties:
        incidentId: { type: string }
        resolvedAt: { type: string, format: date-time }
        version: { type: string }

    ChangeApprovedEvent:
      type: object
      required: [changeId, changeType, approvedAt, approvedBy, version]
      properties:
        changeId: { type: string }
        changeType: { $ref: '../modules/shared.yaml#/components/schemas/ChangeType' }
        approvedAt: { type: string, format: date-time }
        approvedBy: { type: string }
        version: { type: string }

    ChangeImpactAssessedEvent:
      type: object
      required: [changeId, impactSummary, riskScore, blockers, assessedAt, version]
      properties:
        changeId: { type: string }
        impactSummary: { type: string }
        riskScore: { type: number, format: float }
        blockers:
          type: array
          items: { type: string }
        assessedAt: { type: string, format: date-time }
        version: { type: string }

